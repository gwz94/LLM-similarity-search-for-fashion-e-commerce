version: '3.8'

services:
  # --- FRONTEND SERVICES ---
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend-dev
    networks:
      - app-network
    profiles:
      - dev
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend-prod
    networks:
      - app-network
    profiles:
      - prod
    command: npm run start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # --- BACKEND SERVICES ---
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.dev
    depends_on:
      - db-dev
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - ./raw_data:/app/raw_data
      - ./logs:/app/logs
    profiles:
      - dev
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000

  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    env_file:
      - ./backend/.env.prod
    depends_on:
      - db-prod
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - ./raw_data:/app/raw_data
      - ./logs:/app/logs
    profiles:
      - prod
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000

  # --- DATABASE SERVICES ---
  db-dev:
    image: ankane/pgvector:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fashion_ecommerce_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - app-network
    profiles:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-prod:
    image: ankane/pgvector:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: fashion_ecommerce_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - app-network
    profiles:
      - prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
